name: Build and Sign APK with Cordova

on:
  workflow_dispatch:
    inputs:
      html:
        description: 'HTML content with embedded CSS and JS'
        required: true
        type: string
      app_name:
        description: 'Application name'
        required: false
        default: 'MiAplicacion'
        type: string
      package_name:
        description: 'Package name'
        required: false
        default: 'com.example.miaplicacion'
        type: string
      android_target:
        description: 'Android target SDK version'
        required: false
        default: '34'
        type: string

env:
  NODE_VERSION: '20.11.1'
  JAVA_VERSION: '17.0.10'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install Cordova and dependencies
        run: |
          npm install -g cordova@12.0.0 
          npm install -g native-run@2.0.0 
          npm install -g cordova-res@0.15.4
          cordova --version

      - name: Create Cordova project
        run: |
          cordova create "${{ github.event.inputs.app_name || 'MiAplicacion' }}" \
            "${{ github.event.inputs.package_name || 'com.example.miaplicacion' }}" \
            "${{ github.event.inputs.app_name || 'MiAplicacion' }}"
          cd "${{ github.event.inputs.app_name || 'MiAplicacion' }}"
          cordova platform add android@12.0.1
          cordova requirements

      - name: Configure project settings
        working-directory: ${{ github.event.inputs.app_name || 'MiAplicacion' }}
        run: |
          # Actualizar config.xml
          sed -i "s/<platform name=\"android\">/<platform name=\"android\">\n        <preference name=\"android-targetSdkVersion\" value=\"${{ inputs.android_target }}\"\/>/g" config.xml
          sed -i "/<platform name=\"android\">/a \        <preference name=\"AndroidXEnabled\" value=\"true\"\/>" config.xml

      - name: Copy embedded HTML file
        working-directory: ${{ github.event.inputs.app_name || 'MiAplicacion' }}/www
        run: |
          echo "${{ github.event.inputs.html }}" > index.html
          if [ ! -s index.html ]; then
            echo "Error: index.html está vacío"
            exit 1
          fi

      - name: Configure Gradle
        working-directory: ${{ github.event.inputs.app_name || 'MiAplicacion' }}
        run: |
          mkdir -p platforms/android
          cat << EOF > platforms/android/gradle.properties
          org.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError
          org.gradle.parallel=true
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF

      - name: Build APK
        working-directory: ${{ github.event.inputs.app_name || 'MiAplicacion' }}
        run: |
          cordova clean
          cordova build android --release --verbose
        env:
          JAVA_OPTS: '-Xmx4g'

      - name: Setup keystore
        run: |
          if [ -z "${{ secrets.KEYSTORE }}" ]; then
            echo "Error: KEYSTORE secret is not set"
            exit 1
          fi
          echo "${{ secrets.KEYSTORE }}" | base64 -d > my-release-key.jks
          if [ ! -f my-release-key.jks ]; then
            echo "Error: Failed to create keystore file"
            exit 1
          fi

      - name: Sign and align APK
        run: |
          APK_PATH=$(find ${{ github.event.inputs.app_name || 'MiAplicacion' }}/platforms/android/app/build/outputs/apk/release -name "*.apk" -type f | head -n 1)
          
          if [ -z "$APK_PATH" ]; then
            echo "Error: APK not found"
            exit 1
          fi
          
          echo "Found APK at: $APK_PATH"
          
          jarsigner -verbose \
            -sigalg SHA256withRSA \
            -digestalg SHA-256 \
            -keystore my-release-key.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            "$APK_PATH" \
            "${{ secrets.KEY_ALIAS || 'alias_name' }}"
          
          SIGNED_APK="app-release-signed.apk"
          ${ANDROID_HOME}/build-tools/34.0.0/zipalign -v 4 "$APK_PATH" "$SIGNED_APK"
          ${ANDROID_HOME}/build-tools/34.0.0/apksigner verify --verbose "$SIGNED_APK"

      - name: Upload signed APK
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: app-release-signed.apk
          retention-days: 7
