name: Build and Sign APK with Capacitor

on:
  workflow_dispatch:
    inputs:
      html:
        description: 'Contenido HTML con CSS y JS embebidos'
        required: true
        type: string
      app_name:
        description: 'Nombre de la aplicación'
        required: false
        default: 'MiAplicacion'
        type: string
      package_name:
        description: 'Nombre del paquete'
        required: false
        default: 'com.example.miaplicacion'
        type: string

env:
  NODE_VERSION: '20.11.1'
  JAVA_VERSION: '17.0.10'
  ANDROID_SDK_VERSION: '33'
  GRADLE_VERSION: '8.0.2'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Configurar el SDK de Android
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_SDK_VERSION }}
          accept-licenses: true

      - name: Instalar herramientas de compilación de Android
        run: |
          echo "Instalando herramientas de compilación de Android..."
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platforms;android-${{ env.ANDROID_SDK_VERSION }}" "build-tools;${{ env.ANDROID_SDK_VERSION }}.0.0" --licenses

      - name: Instalar Capacitor y dependencias
        run: |
          echo "Instalando Capacitor..."
          npm install -g @capacitor/cli
          npx cap init "${{ github.event.inputs.app_name }}" "${{ github.event.inputs.package_name }}"
          echo "${{ github.event.inputs.html }}" > www/index.html
          npm install
          npx cap add android

      - name: Construir APK
        run: |
          echo "Construyendo APK..."
          cd android
          ./gradlew clean assembleRelease --stacktrace
        env:
          JAVA_OPTS: '-Xmx4g'

      - name: Configurar keystore
        run: |
          echo "Configurando keystore..."
          echo "${{ secrets.KEYSTORE }}" | base64 -d > my-release-key.jks
          if [ ! -f my-release-key.jks ]; then
            echo "Error: No se pudo crear el archivo keystore"
            exit 1
          fi

      - name: Firmar y alinear APK
        run: |
          echo "Firmando APK..."
          cd android/app/build/outputs/apk/release
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore my-release-key.jks -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" app-release-unsigned.apk "${{ secrets.KEY_ALIAS }}"
          ${ANDROID_HOME}/build-tools/${{ env.ANDROID_SDK_VERSION }}.0.0/zipalign -v 4 app-release-unsigned.apk app-release-signed.apk

      - name: Subir APK firmada
        uses: actions/upload-artifact@v4
        with:
          name: signed-apk
          path: android/app/build/outputs/apk/release/app-release-signed.apk
          retention-days: 7
