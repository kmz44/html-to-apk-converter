name: Build Debug APK with Capacitor

on:
  workflow_dispatch:
    inputs:
      html:
        description: 'Contenido HTML con CSS y JS embebidos'
        required: true
        type: string
      app_name:
        description: 'Nombre de la aplicación'
        required: false
        default: '3EnRaya'
        type: string
      package_name:
        description: 'Nombre del paquete'
        required: false
        default: 'com.example.tresenraya'
        type: string

env:
  NODE_VERSION: '20.11.1'
  JAVA_VERSION: '17.0.10'
  ANDROID_SDK_VERSION: '33'
  GRADLE_VERSION: '8.0.2'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Crear package.json si no existe
        run: |
          if [ ! -f package.json ]; then
            echo "Creando package.json..."
            echo '{
              "name": "html-to-apk-converter",
              "version": "1.0.0",
              "description": "Convierte HTML en APK usando Capacitor",
              "main": "index.js",
              "scripts": {
                "test": "echo \"Error: no test specified\" && exit 1"
              },
              "author": "",
              "license": "MIT"
            }' > package.json
          fi

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Configurar el SDK de Android
        uses: android-actions/setup-android@v3
        with:
          api-level: ${{ env.ANDROID_SDK_VERSION }}
          accept-licenses: true

      - name: Instalar herramientas de compilación de Android
        run: |
          echo "Instalando herramientas de compilación de Android..."
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platforms;android-${{ env.ANDROID_SDK_VERSION }}" "build-tools;${{ env.ANDROID_SDK_VERSION }}.0.0"

      - name: Instalar Capacitor y dependencias
        run: |
          echo "Instalando Capacitor..."
          npm install -g @capacitor/cli @capacitor/core
          
          # Inicializar el proyecto de Capacitor
          npm exec -- cap init "${{ github.event.inputs.app_name }}" "${{ github.event.inputs.package_name }}"
          
          # Crear directorio www si no existe
          mkdir -p www
          
          # Escribir el contenido HTML en www/index.html
          echo "${{ github.event.inputs.html }}" > www/index.html
          
          # Instalar dependencias
          npm install
          
          # Eliminar el directorio android si existe
          if [ -d "android" ]; then
            echo "Eliminando directorio android existente..."
            rm -rf android
          fi
          
          # Instalar la plataforma Android
          npm install @capacitor/android
          
          # Agregar la plataforma Android
          npm exec -- cap add android

      - name: Construir APK de depuración
        run: |
          echo "Construyendo APK de depuración..."
          cd android
          ./gradlew clean assembleDebug --stacktrace

      - name: Subir APK de depuración
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 7
